apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.Values.microserviceName}}-deployment"
spec:
  selector:
    matchLabels:
      app: {{.Values.microserviceName}}
  template:
    metadata:
      labels:
        app: {{.Values.microserviceName}}
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: "{{.Values.microserviceName}}-serviceaccount"
      containers:
      - name: {{.Values.microserviceName}}
        image: "{{.Values.image.microserviceName}}:{{.Values.image.tag}}"
        env:
          {{- range $key, $value := .Values.env}}
          - name: {{ $key }}
            value:  {{ $value }}
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: {{.Values.container.port}}
        livenessProbe:
          httpGet: 
            port:  {{.Values.container.port}}
            path:  {{.Values.container.liveness.path}}
          initialDelaySeconds: {{.Values.container.liveness.initialDelaySeconds}}
        readinessProbe:
          httpGet: 
            port:  {{.Values.container.port}}
            path:  {{.Values.container.readiness.path}}
          initialDelaySeconds: {{.Values.container.readiness.initialDelaySeconds}}
        volumeMounts: 
          {{- toYaml .Values.container.volumeMounts | nindent 10 }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}